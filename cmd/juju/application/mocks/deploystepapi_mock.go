// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/application (interfaces: DeployStepAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDeployStepAPI is a mock of DeployStepAPI interface
type MockDeployStepAPI struct {
	ctrl     *gomock.Controller
	recorder *MockDeployStepAPIMockRecorder
}

// MockDeployStepAPIMockRecorder is the mock recorder for MockDeployStepAPI
type MockDeployStepAPIMockRecorder struct {
	mock *MockDeployStepAPI
}

// NewMockDeployStepAPI creates a new mock instance
func NewMockDeployStepAPI(ctrl *gomock.Controller) *MockDeployStepAPI {
	mock := &MockDeployStepAPI{ctrl: ctrl}
	mock.recorder = &MockDeployStepAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeployStepAPI) EXPECT() *MockDeployStepAPIMockRecorder {
	return m.recorder
}

// IsMetered mocks base method
func (m *MockDeployStepAPI) IsMetered(arg0 string) (bool, error) {
	ret := m.ctrl.Call(m, "IsMetered", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsMetered indicates an expected call of IsMetered
func (mr *MockDeployStepAPIMockRecorder) IsMetered(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsMetered", reflect.TypeOf((*MockDeployStepAPI)(nil).IsMetered), arg0)
}

// SetMetricCredentials mocks base method
func (m *MockDeployStepAPI) SetMetricCredentials(arg0 string, arg1 []byte) error {
	ret := m.ctrl.Call(m, "SetMetricCredentials", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMetricCredentials indicates an expected call of SetMetricCredentials
func (mr *MockDeployStepAPIMockRecorder) SetMetricCredentials(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetricCredentials", reflect.TypeOf((*MockDeployStepAPI)(nil).SetMetricCredentials), arg0, arg1)
}
